using recusrssive function to do factorial is worse than using loops
take time complexity of O(n) and also for recursion but the sapce complexity
in recurssive is  O(n) where as in loops O(1)
because in recurssive when we call a function each time we are allocation a
memory

Step-by-step execution:
1st call: reverseList(1)
head is 1 → not None

head.next is 2 → not None

So: newHead = self.reverseList(2)

2nd call: reverseList(2)
head is 2 → not None

head.next is 3 → not None

So: newHead = self.reverseList(3)

3rd call: reverseList(3)
head is 3 → not None

head.next is None

So: newHead = head (which is 3)

Return 3

Now back to 2nd call:

python
Copy
Edit
newHead = 3
head = 2
head.next = 3

head.next.next = head → 3.next = 2
head.next = None → 2.next = None

Now: 3 → 2 → None
Return newHead (3)
Now back to 1st call:

python
Copy
Edit
newHead = 3
head = 1
head.next = 2

head.next.next = head → 2.next = 1
head.next = None → 1.next = None

Now: 3 → 2 → 1 → None
Return newHead (3)
